<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k/8yVJb/M1ea/zRZn/80W6P/NV2o/zdgrP86Yq3/PmOr/z5hpP88W5j/OliRvztXk0AAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXM2dAFTFmvxs5cP8kRoH/K06N/y1R
        lP8uUZb/LE+T/y9Tlv83XKD/PGOo/z5nr/8+Z7L/OmOw/zlgrP86YKj/O1+j/zxdnf89XJm/O1ubQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8/f0AdQYC/IkaI/ypR
        l/8wVp7/Mlac/zRXm/82WJr/O12e/0JmqP9Ga7D/Rm21/0Jqtf87Y6//N12o/zRaoP81WJzvOVydzz5e
        no8/X58wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK1OfQClV
        ob8rVaD/LVaf/zJXnv85W5z/Q2Kf/09tqP9Uc6//VHW0/1Bztv9KbrX/Qmix/ztgqf80WJ//LlGS/yxN
        jM8yVJNwP1+fMD9fnxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAvX7QwMGCyjy1bqM8qU5vvL1OX/zpbmv9HZaH/VXKt/1l4s/9UdbT/TG+y/0Nnrv88YqnvOFylzzJV
        mr8qTIq/J0eDjyVKhDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC9frxAvX7QwKE+YcCJGiM8oSov/NVaW/0Bgn/9IaKj/SWqr/0Flqf85X6b/Mlih/y1U
        ns8yVp9wM1ebQCtLi0AlSoQwH09/EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfP39AHT19vyVFhf8zU5T/PF2f/0Jjpf9AY6f/OF2k/zBX
        oP8pUZr/JU2YvydPl0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wP///8D///8AD///AA///AAA//wAAP/wAAAD8AAAA/AAAADwAAAA8AAAAPAAAAD8AAAD/AA
        AA/wAAA/8AAAP/DAP//wwD//8MA///DAP//wAA//8AAP//wAAP/8AAD//AAA//wAAP/8AAD//AAA//wA
        A//8AAP//wA///8AP/8oAAAAIAAAAEAAAAABAAgAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wIC
        Bf8CBAX/BAUG/wMFCf8FCA7/BgoT/wkNEv8IDhj/DRES/wsQGv8QExn/FB0c/xYiE/8YIRT/FiUd/xsm
        Hv8KEyX/ChQq/w4ZKv8UHCP/EBss/w4ZMv8SHTL/Ex84/xcgI/8aIyf/Gioj/xklKv8aKS7/FiQ0/xkl
        Mv8cLDL/EyI6/xslOf8WKT//HCw7/x0zNf8bMDv/Ii4v/ykzJf8uOiL/JjMt/yg0Kv8iKjP/ISo7/yQ1
        Nf8sOTf/IjA6/yg1Pv8gPDj/Kzw8/zBDKP8oQjP/Kkk1/zZKM/8zUzf/OVM2/xQlQ/8YJUL/FSlF/xot
        Q/8TJUj/FSlM/xorS/8cMEL/HDNJ/xUrU/8aLlL/FCta/xYtWf8YL1n/HDNU/xoyW/8hL0T/IjRF/yg5
        Q/8hNkj/IzpL/ys/Sf8wPkr/ITRU/yQ8Uv8rOlb/IDVa/yM6Wv8oOlv/GTRh/x04Yf8XNGr/GDRq/xk3
        bf8ePHL/ITpj/yk9Zf8jPW3/KT5p/yA+dP8tQEX/K0tC/ypBSP8wRkj/NVdB/zpTR/87XEX/PVpI/y5D
        Uv8sQ1z/NUNU/zNBWf8wTV7/OUxe/zlSV/87WVn/P2BY/ytGY/8vSWf/JEFs/ypCbv8zS2L/NU1t/zxX
        Zv85U2z/JkFz/ytEc/8iQnz/I0R9/ydGfv8pR33/Kkh8/zBKev85VXX/O1p0/ztZff9AX1r/QFRr/0Jf
        av9BX3P/RF54/0Vlbf9DZHD/Q2F8/0doef8fQ4L/IkSF/ydIhP8qSYH/KEmG/y1Mh/8jRor/JUmK/ylK
        if8qTIn/LE2J/yhMjf8sTo3/LVCO/zVQh/8zVov/OFSM/zVYjf87X4j/J0yQ/ylOkv8sTpD/KU+V/ydP
        mP8rUJH/LVGR/y5Ukv8pUJT/LlOU/yhRmv8sUpn/LlSa/ylSnP8sU5z/LVWc/zNUkv83VpL/MFOU/zJU
        lf81Vpb/NVqV/zpYlP8xVZj/NVea/zBXnP83WZv/NlyY/zFYn/80Wpz/OVqb/zxcmf84W5z/O1yd/z1e
        nv8+Y4v/PWKS/zxjnf8sVqH/LVmn/y1aqP8tXKv/L16u/zBXpv8yWaH/NVqh/zVcpf85XqH/OV6l/zJb
        rf84Xqj/MF+x/zResP8/YaL/OWGn/zxgpv83YKz/OWCp/zxiqP87Y67/PGOt/z1lrv8wYLH/N2Gw/0Rj
        hP9FaIT/SGuD/0NljP9Gaor/SWuL/0FmlP9FaZP/SWyQ/0FhoP9EZKH/Q2Sl/0lopv9CZaj/RWer/0Jm
        rf9Fa6//SGio/05tqf9Ka6z/Tm6s/1Fxr/9BZ7D/QWiy/0Rrsv9HbLP/SGyw/0xvs/9OcLD/AAAA/wAA
        AD8/PxIIBgUFBAQEBAABAQEAAQAAAAAAAAAAAAAAAK2tYUM/OiEWFxURCAcFAQAAAAEAAAAAAAAAAAAA
        AAAAra2nYVdJSVhUVEAYEgcEAQEBAQEAAAAAAAAAAAAAALuxra2afVxhf5OAYVQYEgYEAwEBAgAAAAAA
        AAAAAAAAu767raqilpqnq5ySX1EYEQUBAQEAAAAAAAAAAAAAAAC7u7Gxraqjqam9vZ6CYEoXCAMBAwIA
        AAAAAAAAAAAAALvOvrGsqpqexunp5YV4UyIKBAMDAAAAAAAAAAAAAAAA0NDPvq6poKHm6urnjYdtLQsD
        AQABAAAAAAAAAAAAAADh1NPQv8bF4+Pj4uKJh2wsCwMDAQAAAAAAAAAAAAAAAOHh3djH6Ofn5I2Fg3pv
        UCcJAwACAAAAAAAAAAAAAAAA1dbT2sfp546Ng3h0d2oxGgcDAAAAAAAAAAAAAAAAAADT09PHxubjjol6
        d2tSTS0UCQEAAAAAAAAAAAAAAAAAANPTv6CFhIuLiIhua01BHhQHBAEAAAAAAAAAAAAAAAAA082SdnRu
        cXKGcXBqTjweEgoFAQAAAAAAAAAAAAAAAADTXUhEQk5jZmhpZ2VOQDoXEQcEAAAAAAAAAAAAAAAAAAA+
        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
        AAAAAAAAHj5+/zpbnP9FZqn/NFqj/yZOmP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8f8AAOB/
        AADAHwAAgAMAAIABAACAAQAAwAMAAMAHAADIfwAAyH8AAMA/AADgDwAA4A8AAOAPAADgHwAA8H8AACgA
        AAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AQEC/wICAv8BAgX/BQUH/w8P
        AP8DBQr/CBkH/xQcGv8aIwD/IyAA/wkSJ/8NGC//ERsr/xMcK/8OHT//Hi4x/xMiOv8SIT3/EyI+/xUh
        PP8gLC7/JS8s/ypTI/8rQDb/PWA5/0FZPf8RKEP/Hi5C/xovR/8TJkv/ESVO/xUoSv8UKE3/GjFK/xMr
        Vv8WLFT/Fy1X/xgtUP8eNF3/IDVN/yo9S/80Pkr/JTpT/yc4Wv8lPl//LTla/xk0Yf8bNmj/GDdw/x4+
        fv8kPGr/IDts/yI7c/8tSU3/NEdU/zZMYP8yR2//Mk9t/zZTbv8nSH3/RWBu/0lqaP9KY3T/TGN6/ydI
        hP8uTID/LlCN/zpahP8xUYr/OlaO/ylMkP8lTZn/Jk6Y/ytQlf8sU5n/KFGf/y5Vn/8vVJz/Llaf/zVW
        lv8zWJX/MVWZ/zBXnf86W5z/Pl+f/yxVov8vV6D/NFqj/zdbo/84XqX/MVqu/z9lqf85Ya//OWKv/zBg
        sv87ZrT/S26D/09zj/9QdIb/UXeJ/0Jgm/9McZv/VHmd/0Vmqf9DZqz/R2uz/0Zwuv9bfLv/ZIC3////
        //8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/bm5ubgAAAG5ubm5ubm5ubm5u
        biFFQhIAAW5ubm5ubm5ubktMVko1FAAGAG5ubm5ublNIPGJnQC4ABAAAAABubm5gUWRhRD8qAAIAAAAA
        AG5uW2ZjOy0rFgABAAAAAABubm46Pj04HQ0DAAAAAABubm5uDxcZGiMTDgAAAABubm5ubiQRbgocHgxu
        bm5ubm5ubm4wJm43KSgVbm5ubm5ubm5uLyAFGDYbEAhubm5ubm5ubm4lCQc0Myc5LAtubm5ubm5uHyJD
        UFJNXmlGbm5ubm5ubjFXTkdca11aVW5ubm5ubm5fT2VtbGpZQW5ubm5ubm5ubjJUaFhJbm5ubm5ubvH/
        AADgfwAAwB8AAIADAACAAQAAgAEAAMADAADABwAAyH8AAMh/AADAPwAA4A8AAOAPAADgDwAA4B8AAPB/
        AAA=
</value>
  </data>
</root>